
/**
 * Modules dependencies.
 * @api private
 */

var Store = require('datastore');
var path = require('store-path');
var increment = require('semver').inc;
var utils = require('../utils/utils');
var pretty = require('prettyjson');


/**
 * Store plugin to add extra features
 * such as enable and disable or bump.
 * 
 * @api private
 */

function plugin(ctx) {

  ctx.enable = function(name) {
    this.set(name, true);
  };

  ctx.disable = function() {
    this.set(name, false);
  };

  ctx.bump = function(version) {
    if (!~version.indexOf('.')) {
      version = increment(files[file].version, version);
    }
    this.set('version', version);
  };
}


/**
 * Expose 'command'
 */

module.exports = command;


/**
 * Print fancy logs in the shell.
 * 
 * @api private
 */

function print(file, cmd, attr, result) {
  var obj = {};
  if(result) {
    console.log('\033[33m%s %s\033[m', cmd, file);
    obj[attr] = result;
    console.log(pretty.render(obj, {
      keysColor: 'blue',
      dashColor: 'magenta',
      stringColor: 'grey'
    }));
  } else {
    utils.error(attr + " doesn't exist");
  }
}


/**
 * command constructor.
 * @api public
 */

function command(json, name, cmd) {
  var args = [].slice.call(arguments, 3);
  var attr = args[0];
  var store = new Store(json);
  store.use(plugin);
  store.use(path);

  store[cmd].apply(store, args);
  if(cmd === 'bump') attr = 'version';
  print(name, cmd, attr, store.path(attr));

  return store.toJSON(null, 2);
}
